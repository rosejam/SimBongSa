{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\pjt\\\\sub1\\\\webmobile2\\\\front_react\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/style.scss\";\nimport \"assets/css/user.scss\";\nimport PV from \"password-validator\";\nimport * as EmailValidator from \"email-validator\";\nimport KakaoLogin from \"components/user/snsLogin/Kakao\";\nimport GoogleLogin from \"components/user/snsLogin/Google\";\nimport UserApi from \"apis/UserApi\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordSchema: new PV(),\n      error: {\n        email: false,\n        password: false\n      },\n      isSubmit: false,\n      component: this\n    };\n  }\n\n  componentDidMount() {\n    this.passwordSchema.is().min(8).is().max(100).has().digits().has().letters();\n  }\n\n  checkForm() {\n    if (this.email.length >= 0 && !EmailValidator.validate(this.email)) this.error.email = \"이메일 형식이 아닙니다.\";else this.error.email = false;\n    if (this.password.length >= 0 && !this.passwordSchema.validate(this.password)) this.error.password = \"영문,숫자 포함 8 자리이상이어야 합니다.\";else this.error.password = false;\n    let isSubmit = true;\n    Object.values(this.error).map(v => {\n      if (v) isSubmit = false;\n    });\n    this.isSubmit = isSubmit;\n  }\n\n  login() {\n    if (this.isSubmit) {\n      let email = this.email,\n          password = this.password;\n      let data = {\n        email,\n        password\n      }; //요청 후에는 버튼 비활성화\n\n      this.isSubmit = false;\n      UserApi.requestLogin(data, res => {\n        //통신을 통해 전달받은 값 콘솔에 출력\n        //                        console.log(res);\n        //요청이 끝나면 버튼 활성화\n        this.isSubmit = true;\n      }, error => {\n        //요청이 끝나면 버튼 활성화\n        this.isSubmit = true;\n      });\n    }\n  }\n\n  handleInput() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"user\",\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"wrapC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-with-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"v-model\": \"email\",\n      \"v-bind\": \"{error : error.password, complete:!error.password&&password.length!==0}\",\n      onKeyDown: event => {\n        if (event.key === \"Enter\") {\n          this.login();\n        }\n      },\n      id: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(\"div\", {\n      class: \"error-text\",\n      \"v-if\": \"error.email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, error.email)), React.createElement(\"div\", {\n      class: \"input-with-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"v-model\": \"password\",\n      type: \"password\",\n      \"v-bind\": \"{error : error.password, complete:!error.password&&password.length!==0}\",\n      id: \"password\",\n      onKeyDown: event => {\n        if (event.key === \"Enter\") {\n          this.login();\n        }\n      },\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"div\", {\n      class: \"error-text\",\n      \"v-if\": \"error.password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, error.password)), React.createElement(\"div\", {\n      class: \"sns-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"SNS \\uAC04\\uD3B8 \\uB85C\\uADF8\\uC778\"), React.createElement(\"div\", {\n      class: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(KakaoLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(GoogleLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"add-option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\uD639\\uC2DC\"), React.createElement(\"div\", {\n      class: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"), React.createElement(Link, {\n      to: \"{'????'}\",\n      class: \"btn--text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\")), React.createElement(\"div\", {\n      class: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"), React.createElement(Link, {\n      to: `${this.props.match.url}/Join`,\n      class: \"btn--text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/pjt/sub1/webmobile2/front_react/src/components/login/Login.js"],"names":["React","Link","PV","EmailValidator","KakaoLogin","GoogleLogin","UserApi","Login","Component","state","email","password","passwordSchema","error","isSubmit","component","componentDidMount","is","min","max","has","digits","letters","checkForm","length","validate","Object","values","map","v","login","data","requestLogin","res","handleInput","render","event","key","props","match","url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"assets/css/style.scss\";\r\nimport \"assets/css/user.scss\";\r\nimport PV from \"password-validator\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport KakaoLogin from \"components/user/snsLogin/Kakao\";\r\nimport GoogleLogin from \"components/user/snsLogin/Google\";\r\nimport UserApi from \"apis/UserApi\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordSchema: new PV(),\r\n    error: {\r\n      email: false,\r\n      password: false\r\n    },\r\n    isSubmit: false,\r\n    component: this\r\n  };\r\n  componentDidMount() {\r\n    this.passwordSchema\r\n      .is()\r\n      .min(8)\r\n      .is()\r\n      .max(100)\r\n      .has()\r\n      .digits()\r\n      .has()\r\n      .letters();\r\n  }\r\n  checkForm() {\r\n    if (this.email.length >= 0 && !EmailValidator.validate(this.email))\r\n      this.error.email = \"이메일 형식이 아닙니다.\";\r\n    else this.error.email = false;\r\n\r\n    if (\r\n      this.password.length >= 0 &&\r\n      !this.passwordSchema.validate(this.password)\r\n    )\r\n      this.error.password = \"영문,숫자 포함 8 자리이상이어야 합니다.\";\r\n    else this.error.password = false;\r\n\r\n    let isSubmit = true;\r\n    Object.values(this.error).map(v => {\r\n      if (v) isSubmit = false;\r\n    });\r\n    this.isSubmit = isSubmit;\r\n  }\r\n  login() {\r\n    if (this.isSubmit) {\r\n      let { email, password } = this;\r\n      let data = {\r\n        email,\r\n        password\r\n      };\r\n\r\n      //요청 후에는 버튼 비활성화\r\n      this.isSubmit = false;\r\n\r\n      UserApi.requestLogin(\r\n        data,\r\n        res => {\r\n          //통신을 통해 전달받은 값 콘솔에 출력\r\n          //                        console.log(res);\r\n\r\n          //요청이 끝나면 버튼 활성화\r\n          this.isSubmit = true;\r\n        },\r\n        error => {\r\n          //요청이 끝나면 버튼 활성화\r\n          this.isSubmit = true;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleInput() {}\r\n  render() {\r\n    return (\r\n      <div class=\"user\" id=\"login\">\r\n        <div class=\"wrapC\">\r\n          <div class=\"input-with-label\">\r\n            <input\r\n              v-model=\"email\"\r\n              v-bind=\"{error : error.password, complete:!error.password&&password.length!==0}\"\r\n              onKeyDown={event => {\r\n                if (event.key === \"Enter\") {\r\n                  this.login();\r\n                }\r\n              }}\r\n              id=\"email\"\r\n              placeholder=\"이메일을 입력하세요.\"\r\n              type=\"text\"\r\n            />\r\n            <label for=\"email\">이메일</label>\r\n            <div class=\"error-text\" v-if=\"error.email\">\r\n              {error.email}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"input-with-label\">\r\n            <input\r\n              v-model=\"password\"\r\n              type=\"password\"\r\n              v-bind=\"{error : error.password, complete:!error.password&&password.length!==0}\"\r\n              id=\"password\"\r\n              onKeyDown={event => {\r\n                if (event.key === \"Enter\") {\r\n                  this.login();\r\n                }\r\n              }}\r\n              placeholder=\"비밀번호를 입력하세요.\"\r\n            />\r\n            <label for=\"password\">비밀번호</label>\r\n            <div class=\"error-text\" v-if=\"error.password\">\r\n              {error.password}\r\n            </div>\r\n          </div>\r\n          {/* <button class=\"btn btn--back btn--login\" v-on:click=\"login\" :disabled=\"!isSubmit\"\r\n                    :class=\"{disabled : !isSubmit}\">\r\n                로그인\r\n\r\n            </button> */}\r\n\r\n          <div class=\"sns-login\">\r\n            <div class=\"text\">\r\n              <p>SNS 간편 로그인</p>\r\n              <div class=\"bar\"></div>\r\n            </div>\r\n\r\n            <KakaoLogin />\r\n            <GoogleLogin />\r\n          </div>\r\n          <div class=\"add-option\">\r\n            <div class=\"text\">\r\n              <p>혹시</p>\r\n              <div class=\"bar\"></div>\r\n            </div>\r\n            <div class=\"wrap\">\r\n              <p>비밀번호를 잊으셨나요?</p>\r\n              <Link to=\"{'????'}\" class=\"btn--text\">\r\n                비밀번호 찾기\r\n              </Link>\r\n            </div>\r\n            <div class=\"wrap\">\r\n              <p>아직 회원이 아니신가요?</p>\r\n              <Link to={`${this.props.match.url}/Join`} class=\"btn--text\">\r\n                가입하기\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}