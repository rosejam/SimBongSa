{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\pjt\\\\sub1\\\\webmobile2\\\\front_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\pjt\\\\sub1\\\\webmobile2\\\\front_react\\\\src\\\\components\\\\findPassword\\\\FindPassword.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"assets/css/style.scss\";\nimport \"assets/css/user.scss\";\nimport PV from \"password-validator\";\nimport * as EmailValidator from \"email-validator\";\nimport KakaoLogin from \"components/user/snsLogin/Kakao\";\nimport GoogleLogin from \"components/user/snsLogin/Google\";\nimport UserApi from \"apis/UserApi\";\n\nclass FindPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      error: {\n        email: false\n      },\n      isSubmit: false,\n      component: this\n    };\n\n    this.checkForm = () => {\n      let error = _objectSpread({}, this.state.error);\n\n      if (this.state.email.length >= 0 && !EmailValidator.validate(this.state.email)) {\n        error.email = \"이메일 형식이 아닙니다.\";\n      } else {\n        error.email = false;\n      }\n\n      this.setState({\n        error: error\n      });\n      let isSubmit = true;\n      Object.values(this.state.error).map(v => {\n        if (v) isSubmit = false;\n        return v;\n      });\n      this.setState({\n        isSubmit: isSubmit\n      });\n      console.log(this.state.isSubmit);\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        email: e.target.value\n      });\n      this.checkForm();\n    };\n  }\n\n  componentDidMount() {}\n\n  login() {\n    if (this.isSubmit) {\n      let email = this.email,\n          password = this.password;\n      let data = {\n        email,\n        password\n      }; //요청 후에는 버튼 비활성화\n\n      this.isSubmit = false;\n      UserApi.requestLogin(data, res => {\n        //통신을 통해 전달받은 값 콘솔에 출력\n        //                        console.log(res);\n        //요청이 끝나면 버튼 활성화\n        this.isSubmit = true;\n      }, error => {\n        //요청이 끝나면 버튼 활성화\n        this.isSubmit = true;\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"user\",\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"), React.createElement(\"div\", {\n      className: \"input-with-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.email,\n      \"v-bind\": \"{error : error.password, complete:!error.password&&password.length!==0}\",\n      onKeyDown: event => {\n        if (event.key === \"Enter\") {\n          this.login();\n        }\n      },\n      onChange: this.handleInput,\n      id: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(\"div\", {\n      className: \"error-text\",\n      \"v-if\": \"error.email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.error.email)), React.createElement(\"button\", {\n      disabled: !this.isSubmit,\n      className: \"btn btn--back btn--login\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30 \\uBA54\\uC77C \\uC804\\uC1A1\")));\n  }\n\n}\n\nexport default FindPassword;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/pjt/sub1/webmobile2/front_react/src/components/findPassword/FindPassword.js"],"names":["React","Link","PV","EmailValidator","KakaoLogin","GoogleLogin","UserApi","FindPassword","Component","state","email","error","isSubmit","component","checkForm","length","validate","setState","Object","values","map","v","console","log","handleInput","e","target","value","componentDidMount","login","password","data","requestLogin","res","render","event","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"assets/css/style.scss\";\r\nimport \"assets/css/user.scss\";\r\nimport PV from \"password-validator\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport KakaoLogin from \"components/user/snsLogin/Kakao\";\r\nimport GoogleLogin from \"components/user/snsLogin/Google\";\r\nimport UserApi from \"apis/UserApi\";\r\n\r\nclass FindPassword extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    error: {\r\n      email: false\r\n    },\r\n    isSubmit: false,\r\n    component: this\r\n  };\r\n  componentDidMount() {}\r\n  checkForm = () => {\r\n    let error = { ...this.state.error };\r\n    if (\r\n      this.state.email.length >= 0 &&\r\n      !EmailValidator.validate(this.state.email)\r\n    ) {\r\n      error.email = \"이메일 형식이 아닙니다.\";\r\n    } else {\r\n      error.email = false;\r\n    }\r\n    this.setState({ error: error });\r\n    let isSubmit = true;\r\n    Object.values(this.state.error).map(v => {\r\n      if (v) isSubmit = false;\r\n      return v;\r\n    });\r\n    this.setState({\r\n      isSubmit: isSubmit\r\n    });\r\n    console.log(this.state.isSubmit);\r\n  };\r\n  login() {\r\n    if (this.isSubmit) {\r\n      let { email, password } = this;\r\n      let data = {\r\n        email,\r\n        password\r\n      };\r\n\r\n      //요청 후에는 버튼 비활성화\r\n      this.isSubmit = false;\r\n\r\n      UserApi.requestLogin(\r\n        data,\r\n        res => {\r\n          //통신을 통해 전달받은 값 콘솔에 출력\r\n          //                        console.log(res);\r\n\r\n          //요청이 끝나면 버튼 활성화\r\n          this.isSubmit = true;\r\n        },\r\n        error => {\r\n          //요청이 끝나면 버튼 활성화\r\n          this.isSubmit = true;\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleInput = e => {\r\n    this.setState({ email: e.target.value });\r\n    this.checkForm();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"user\" id=\"login\">\r\n        <div className=\"wrapC\">\r\n          <h1 className=\"title\">비밀번호 찾기</h1>\r\n          <div className=\"input-with-label\">\r\n            <input\r\n              value={this.state.email}\r\n              v-bind=\"{error : error.password, complete:!error.password&&password.length!==0}\"\r\n              onKeyDown={event => {\r\n                if (event.key === \"Enter\") {\r\n                  this.login();\r\n                }\r\n              }}\r\n              onChange={this.handleInput}\r\n              id=\"email\"\r\n              placeholder=\"이메일을 입력하세요.\"\r\n              type=\"text\"\r\n            />\r\n            <label htmlFor=\"email\">이메일</label>\r\n            <div className=\"error-text\" v-if=\"error.email\">\r\n              {this.state.error.email}\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            disabled={!this.isSubmit}\r\n            className=\"btn btn--back btn--login\"\r\n            onClick={this.login}\r\n          >\r\n            비밀번호 찾기 메일 전송\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindPassword;\r\n"]},"metadata":{},"sourceType":"module"}