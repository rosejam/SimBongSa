{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\pjt\\\\sub1\\\\webmobile2\\\\front_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\pjt\\\\sub1\\\\webmobile2\\\\front_react\\\\src\\\\components\\\\mailresend\\\\MailReSend.tsx\";\nimport React from \"react\";\nimport \"assets/css/style.scss\";\nimport \"assets/css/user.scss\";\nimport * as EmailValidator from \"email-validator\"; // import UserApi from \"apis/UserApi\";\n\nclass MailReSend extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      error: {\n        email: \"\"\n      },\n      isSubmit: false,\n      component: this\n    };\n\n    this.checkForm = () => {\n      let error = _objectSpread({}, this.state.error);\n\n      if (this.state.email.length >= 0 && !EmailValidator.validate(this.state.email)) {\n        error.email = \"이메일 형식이 아닙니다.\";\n      } else {\n        error.email = \"\";\n      }\n\n      this.setState({\n        error: error\n      }, () => {\n        let isSubmit = true;\n        Object.values(this.state.error).map(v => {\n          if (v) isSubmit = false;\n          return v;\n        });\n        this.setState({\n          isSubmit: isSubmit\n        });\n      });\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        email: e.currentTarget.value\n      }, () => {\n        this.checkForm();\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.setState({\n      email: this.props.location.state.email\n    }, () => this.checkForm());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"user\",\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\uBA54\\uC77C \\uC7AC\\uC804\\uC1A1\"), React.createElement(\"div\", {\n      className: \"input-with-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.email,\n      \"v-bind\": \"{error : error.password, complete:!error.password&&password.length!==0}\",\n      onKeyDown: event => {\n        if (event.key === \"Enter\") {//this.login();\n        }\n      },\n      onChange: this.handleInput,\n      id: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(\"div\", {\n      className: \"error-text\",\n      \"v-if\": \"error.email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.error.email)), React.createElement(\"button\", {\n      disabled: !this.state.isSubmit,\n      className: \"btn btn--back btn--login\" // onClick={\"#\"}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\uBA54\\uC77C \\uC7AC\\uC804\\uC1A1\")));\n  }\n\n}\n\nexport default MailReSend;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/pjt/sub1/webmobile2/front_react/src/components/mailresend/MailReSend.tsx"],"names":["React","EmailValidator","MailReSend","Component","state","email","error","isSubmit","component","checkForm","length","validate","setState","Object","values","map","v","handleInput","e","currentTarget","value","componentDidMount","console","log","props","location","render","event","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"assets/css/style.scss\";\r\nimport \"assets/css/user.scss\";\r\nimport * as EmailValidator from \"email-validator\";\r\n// import UserApi from \"apis/UserApi\";\r\n\r\ninterface IProps {\r\n  location: {\r\n    state: {\r\n      email: string;\r\n    };\r\n  };\r\n}\r\nclass MailReSend extends React.Component<IProps> {\r\n  state = {\r\n    email: \"\",\r\n    error: {\r\n      email: \"\"\r\n    },\r\n    isSubmit: false,\r\n    component: this\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.setState({ email: this.props.location.state.email }, () =>\r\n      this.checkForm()\r\n    );\r\n  }\r\n  checkForm = () => {\r\n    let error = { ...this.state.error };\r\n    if (\r\n      this.state.email.length >= 0 &&\r\n      !EmailValidator.validate(this.state.email)\r\n    ) {\r\n      error.email = \"이메일 형식이 아닙니다.\";\r\n    } else {\r\n      error.email = \"\";\r\n    }\r\n    this.setState({ error: error }, () => {\r\n      let isSubmit = true;\r\n      Object.values(this.state.error).map(v => {\r\n        if (v) isSubmit = false;\r\n        return v;\r\n      });\r\n      this.setState({\r\n        isSubmit: isSubmit\r\n      });\r\n    });\r\n  };\r\n  // login() {\r\n  //   if (this.state.isSubmit) {\r\n  //     let { email } = this.state;\r\n  //     let data = {\r\n  //       email,\r\n  //       password\r\n  //     };\r\n\r\n  //     //요청 후에는 버튼 비활성화\r\n  //     this.isSubmit = false;\r\n\r\n  //     UserApi.requestLogin(\r\n  //       data,\r\n  //       res => {\r\n  //         //통신을 통해 전달받은 값 콘솔에 출력\r\n  //         //                        console.log(res);\r\n\r\n  //         //요청이 끝나면 버튼 활성화\r\n  //         this.isSubmit = true;\r\n  //       },\r\n  //       error => {\r\n  //         //요청이 끝나면 버튼 활성화\r\n  //         this.isSubmit = true;\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n  handleInput = (e: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({ email: e.currentTarget.value }, () => {\r\n      this.checkForm();\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"user\" id=\"login\">\r\n        <div className=\"wrapC\">\r\n          <h1 className=\"title\">메일 재전송</h1>\r\n          <div className=\"input-with-label\">\r\n            <input\r\n              value={this.state.email}\r\n              v-bind=\"{error : error.password, complete:!error.password&&password.length!==0}\"\r\n              onKeyDown={event => {\r\n                if (event.key === \"Enter\") {\r\n                  //this.login();\r\n                }\r\n              }}\r\n              onChange={this.handleInput}\r\n              id=\"email\"\r\n              placeholder=\"이메일을 입력하세요.\"\r\n              type=\"text\"\r\n            />\r\n            <label htmlFor=\"email\">이메일</label>\r\n            <div className=\"error-text\" v-if=\"error.email\">\r\n              {this.state.error.email}\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            disabled={!this.state.isSubmit}\r\n            className=\"btn btn--back btn--login\"\r\n            // onClick={\"#\"}\r\n          >\r\n            메일 재전송\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MailReSend;\r\n"]},"metadata":{},"sourceType":"module"}